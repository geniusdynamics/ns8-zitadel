#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
import agent

# Try to parse the stdin as JSON.
# If parsing fails, output everything to stderr
data = json.load(sys.stdin)

#This is specific to you module, so you need to change it accordingly.
# Configuration of the host
# SMTP:
# # must include the port, like smtp.mailtrap.io:2525. IPv6 is also supported, like [2001:db8::1]:2525
# Host: # ZITADEL_DEFAULTINSTANCE_SMTPCONFIGURATION_SMTP_HOST
# User: # ZITADEL_DEFAULTINSTANCE_SMTPCONFIGURATION_SMTP_USER
# Password: # ZITADEL_DEFAULTINSTANCE_SMTPCONFIGURATION_SMTP_PASSWORD
# TLS: # ZITADEL_DEFAULTINSTANCE_SMTPCONFIGURATION_TLS
# # If the host of the sender is different from ExternalDomain set DefaultInstance.DomainPolicy.SMTPSenderAddressMatchesInstanceDomain to false
# From: # ZITADEL_DEFAULTINSTANCE_SMTPCONFIGURATION_FROM
# FromName: # ZITADEL_DEFAULTINSTANCE_SMTPCONFIGURATION_FROMNAME
# ReplyToAddress: # ZITADEL_DEFAULTINSTANCE_SMTPCONFIGURATION_REPLYTOADDRESS
HOST = data.get('host')

# SET SMTP CONFIGURATION
# the service if the leader node is not reachable:
rdb = agent.redis_connect(use_replica=True)
smtp_settings = agent.get_smarthost_settings(rdb)

SMTP_HOST = smtp_settings['host']
SMTP_PORT = smtp_settings['port']
SMTP_USER = smtp_settings['username']
SMTP_PASSWORD = smtp_settings['password']
SMTP_ENCRYPTION = smtp_settings['encrypt_smtp']
SMTP_FROM = 'true' if smtp_settings['tls_verify'] else 'false'


zitadel_app_config = {
    "ZITADEL_EXTERNALDOMAIN": HOST,
    "ZITADEL_EXTERNALPORT": "443",
    "ZITADEL_EXTERNALSECURE": "true",
    "ZITADEL_DEFAULTINSTANCE_SMTPCONFIGURATION_SMTP_HOST": SMTP_HOST + ":" + str(SMTP_PORT),
    "ZITADEL_DEFAULTINSTANCE_SMTPCONFIGURATION_SMTP_USER": SMTP_USER,
    "ZITADEL_DEFAULTINSTANCE_SMTPCONFIGURATION_SMTP_PASSWORD": SMTP_PASSWORD,
    "ZITADEL_DEFAULTINSTANCE_SMTPCONFIGURATION_TLS": 'true' if smtp_settings['tls_verify'] else 'false',
    "ZITADEL_DEFAULTINSTANCE_SMTPCONFIGURATION_FROM": "noreply@" + HOST,
    "ZITADEL_DEFAULTINSTANCE_SMTPCONFIGURATION_FROMNAME": "ZITADEL" + SMTP_USER,
    "ZITADEL_DEFAULTINSTANCE_SMTPCONFIGURATION_REPLYTOADDRESS": "noreply@" + HOST,
    "ZITADEL_DEFAULTINSTANCE_DOMAINPOLICY_SMTPSENDERADDRESSMATCHESINSTANCEDOMAIN": "false",
}
agent.write_envfile("zitadel-app.env", zitadel_app_config)
#agent.dump_env()
